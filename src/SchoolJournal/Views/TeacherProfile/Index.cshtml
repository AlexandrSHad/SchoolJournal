@model SchoolJournal.Models.TeacherProfileViewModel

@{
    ViewBag.Title = "Teacher profile - " + Model.Teacher.TeacherFullName;
    ViewBag.FullSize = true;
}

@section styles{
    <link href="~/Content/TeacherProfile.css" rel="stylesheet" />
    <link href="~/Content/bootstrap3-editable/css/bootstrap-editable.css" rel="stylesheet" />
}

<div class="profile-box">
    <aside class="sm-side">
        <div class="teacher-head">
            <a class="teacher-avatar" href="#">
                <img width="64" hieght="60" src="~/Content/Images/DefaultAvatar.png">
            </a>
            <div class="teacher-name">
                <h5><a href="#">@Model.Teacher.TeacherFullName</a></h5>
                <span><a href="#">email@gmail.com</a></span>
            </div>
            <a class="mail-dropdown pull-right" href="javascript:;">
                <i class="fa fa-chevron-down"></i>
            </a>
        </div>
        <div class="teacher-body">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()
            <div class="form-horizontal">
                <div class="form-group">
                    @Html.Label("Date from", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBox("DateFrom", null, new { type = "date", @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.Label("Date till", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBox("DateTill", null, new { type = "date", @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.SchoolClasses, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("SchoolClassId", new SelectList(Model.SchoolClasses, "SchoolClassNumber", "SchoolClassName"), string.Empty, htmlAttributes: new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.Label("Subject", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("SubjectId", new SelectList(string.Empty, "Id", "SubjectName"), htmlAttributes: new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <button id="btnShow" class="btn btn-default">Показать</button>
                    </div>
                </div>
            </div>
            }
        </div>
    </aside>
    <aside class="lg-side">
        <div class="marks-head">
            <h3>Оценки</h3>
        </div>
        <div class="marks-body">
            <div id="tableOfMarks" class="table-responsive"></div>
        </div>
    </aside>
</div>

@section scripts{
    <script src="~/Scripts/bootstrap3-editable/bootstrap-editable.min.js"></script>

    <script type="text/javascript">
        $(function () {
            $("#SchoolClassId").change(function (e) {
                e.preventDefault();
                $("#SubjectId").empty();
                $.ajax({
                    url: '@Url.Action("SchoolClassSubjects")',
                    type: 'GET',
                    data: {
                        SchoolClassNumber: $("#SchoolClassId").val(),
                        TeacherId: '@Model.Teacher.TeacherId'
                    },
                    success: function (subjects) {
                        $("#SubjectId").append('<option value=""></option>');
                        $.each(subjects, function (i, subject) {
                            $("#SubjectId").append('<option value="' + subject.SubjectNumber + '">' + subject.SubjectName + '</option>');
                        });
                    },
                });
            });

            $('#btnShow').click(function(e) {
                e.preventDefault();
                $.ajax({
                    url: '@Url.Action("TableOfMarks")',
                    type: 'GET',
                    data: {
                        DateFrom: $("#DateFrom").val(),
                        DateTill: $("#DateTill").val(),
                        SchoolClassId: $("#SchoolClassId").val(),
                        SubjectId: $("#SubjectId").val()
                    },
                    success: function (data) {
                        processResponse(data)
                    },
                });
            });
        });

        processResponse = function (data) {
            $("#tableOfMarks").html(data).promise().done(function () {
                $(".editable").editable({
                    emptytext: '-',
                    type: 'select',
                    title: 'Выберите оценку',
                    url: '@Url.Action("SetMark")',
                    send: 'always',
                    source: availableMarkValues,
                    params: function (params) {
                        {
                            td = this.closest('td');
                            mewParams = {
                                date: $('table thead tr th').eq(td.cellIndex).attr('date'),
                                subjectId: $('#SubjectId').val(),
                                studentId: td.closest('tr').id,
                                value: params.value
                            };
                            return mewParams;
                        }
                    }
                });
            });
        };

        availableMarkValues = [
            { value:  '0', text:  '-' },
            { value:  '1', text:  '1' },
            { value:  '2', text:  '2' },
            { value:  '3', text:  '3' },
            { value:  '4', text:  '4' },
            { value:  '5', text:  '5' },
            { value:  '6', text:  '6' },
            { value:  '7', text:  '7' },
            { value:  '8', text:  '8' },
            { value:  '9', text:  '9' },
            { value: '10', text: '10' },
            { value: '11', text: '11' },
            { value: '12', text: '12' }
        ]
    </script>
}

<br />
<br />